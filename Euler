def Eu(t,y,h):
    ynew=y+f(t,y)*h
    tnew=t+h
    return ynew,tnew
    
def RK(t,y,h):
    k1=f(t,y)
    k2=f(t+h/2,y+h*k1/2)
    k3=f(t+h/2,y+h*k2/2)
    k4=f(t+h,y+h*k3)
    ynew=y+(h/6)*(k1+2*k2+2*k3+k4)
    tnew=t+h
    return ynew,tnew

def f(t,y):
    return (1-2*t+6*y)
    
t0=0;y0=1;L1=[];L2=[] #initial conditions
tend=1
L1.append([t0,y0]);
L2.append([t0,y0])


#Euler
print "Euler h=.1"
t=t0;y=y0;h=.1; cnt=tend/h
for i in srange(cnt):
    [y,t]=Eu(t,y,h)
    L1.append([t,y])
    if abs(t%(0.2))<0.0001:
        print t.n(digits=1),y.n()
print ""

#Euler
print "Euler h=.001"
t=t0;y=y0;h=.001; cnt=tend/h
for i in srange(cnt):
    [y,t]=Eu(t,y,h)
    
    if abs(t%(0.2))<0.0001:
        print t.n(digits=1),y.n()
print ""

#Runge-Kutta
print "Runge-Kutta h=.1"
t=t0; y=y0;h=.1; cnt=tend/h
for i in srange(cnt):
    [y,t]=RK(t,y,h)
    L2.append([t,y])
    if abs(t%(0.2))<0.0001:
        print t.n(digits=1),y.n()
print ""

#Runge-Kutta
print "Runge-Kutta h=.001"
t=t0; y=y0;h=.001; cnt=tend/h
for i in srange(cnt):
    [y,t]=RK(t,y,h)
    
    if abs(t%(0.2))<0.00001:
        print t.n(digits=1),y.n()
print ""

#analytic
print "Analytic Solution"
f(t)=1/3*t + 10/9*e^(6*t) - 1/9 
for i in srange(1,6):
    print (i/5).n(digits=1),f(i/5).n()

P1=list_plot(L1,plotjoined=false,color="blue")
P1+=list_plot(L2,plotjoined=false,color="orange",size=30) 
P1+=plot(f,t,color="red")
show(P1,xmin=0,xmax=tend,ymin=0,ymax=64,figsize=4)
